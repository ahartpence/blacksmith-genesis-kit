---
meta:
  environment: (( grab genesis.env || params.env ))

  cf:
    exodus_path: (( concat "secret/exodus/" meta.environment "/cf" ))
    deployment_name: (( concat meta.environment "-cf" ))
    system_domain: (( vault meta.cf.exodus_path ":system_domain" ))
    api_url:    (( concat "https://api." meta.cf.system_domain ))
    username:   (( vault meta.cf.exodus_path ":admin_username" ))
    password:   (( vault meta.cf.exodus_path ":admin_password" ))

  default:
    rabbitmq_tags:
      - blacksmith
      - dedicated
      - rabbitmq

    rabbitmq_plans:
      standalone:
        name: standalone
        description: A dedicated RabbitMQ server, with no redundancy or replication
        limit: 7
        type: standalone
        vm_type: default

releases:
- name:    rabbitmq-forge
  version: 0.5.15l
  url:     https://github.com/itsouvalas/rabbitmq-forge-boshrelease/releases/download/v0.5.15l/rabbitmq-forge-0.5.15l.tgz
  sha1:    caf09fcd70d1c936856b7f38625f73ed72a2804b

params:
  releases:
    - (( append ))
    - (( grab releases.rabbitmq-forge ))

instance_groups:
  - name: blacksmith
    jobs:
      - release: rabbitmq-forge
        name:    rabbitmq-blacksmith-plans
        properties:
          environment: (( grab meta.environment ))
          cf:
            exodus_path: (( grab meta.cf.exodus_path ))
            deployment_name: (( grab meta.cf.deployment_name ))
            system_domain: (( grab meta.cf.system_domain ))
            api_url:    (( grab meta.cf.api_url ))
            username:   (( grab meta.cf.username ))
            password:   (( grab meta.cf.password ))

          plans: (( grab params.rabbitmq_plans || meta.default.rabbitmq_plans ))
          service:
            id:          (( grab params.rabbitmq_service_id          || "rabbitmq" ))
            name:        (( grab params.rabbitmq_service_name        || params.rabbitmq_service_id || "rabbitmq" ))
            description: (( grab params.rabbitmq_service_description || "A dedicated RabbitMQ instance, deployed on-demand" ))
            tags:        (( grab params.rabbitmq_service_tags        || meta.default.rabbitmq_tags ))
            limit:       (( grab params.rabbitmq_service_limit       || 0 ))

